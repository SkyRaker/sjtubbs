package com.tyt.bbs.adapter;

import java.lang.reflect.Array;
import java.util.ArrayList;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.tyt.bbs.R;
import com.tyt.bbs.entity.MessageItem;
import com.tyt.bbs.utils.Net;
import com.tyt.bbs.utils.Property;
import com.tyt.bbs.view.LoadingDrawable;
import com.tyt.bbs.view.TitleProvider;

import android.content.Context;
import android.graphics.Color;
import android.os.AsyncTask;
import android.text.Html;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;

public class DiffAdapter extends BaseAdapter implements TitleProvider {

	private static final int MAX_COUNT = 2;
	private final String[] names = {"New Message","All Message"};
	private MsgListAdapter[]  mAdapter =new MsgListAdapter[2];
	private LayoutInflater mInflater;
	private Boolean error;
	private OnItemClickListener listener;
	private int selectPosition;

	public DiffAdapter(Context context,OnItemClickListener listener) {
		mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		mAdapter[0]= new MsgListAdapter(context);
		mAdapter[1]= new MsgListAdapter(context);
		error=false;
		selectPosition=0;
		this.listener = listener;
	}


	@Override
	public int getViewTypeCount() {
		return MAX_COUNT;
	}

	@Override
	public int getCount() {
		return 2;
	}

	@Override
	public MsgListAdapter getItem(int position) {
		return mAdapter[position];
	}

	@Override
	public long getItemId(int position) {
		return position;
	}


	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		//        int view = getItemViewType(position);
		return drawView(position,convertView);
	}



	/* (non-Javadoc)
	 * @see org.taptwo.android.widget.TitleProvider#getTitle(int)
	 */
	public String getTitle(int position) {
		return names[position];
	}

	private class ViewHolder {
		ProgressBar mProgressBar;
		ListView mListView;
	}


	private View drawView(int position, View view) {
		ViewHolder holder = null;

		if(view == null) {
			Log.v("===draw===", position+"");
			view = mInflater.inflate(R.layout.diff_msgview, null);			
			holder = new ViewHolder();
			holder.mProgressBar = (ProgressBar) view.findViewById(R.id.progressbar_msg);
			holder.mProgressBar.setIndeterminateDrawable(new LoadingDrawable(0,
					Color.parseColor("#c6e0f2"), Color.parseColor("#337fd3"), Color.TRANSPARENT, 200));
			holder.mListView = (ListView) view.findViewById(R.id.lv_msg);	
			holder.mListView.setOnItemClickListener(listener);
			view.setTag(holder);
		} else {
			holder = (ViewHolder) view.getTag();
		}		
		final ArrayList<MessageItem> data = getItem(position).getMsg();
		if (data != null&&selectPosition==-1) {
			holder.mProgressBar.setVisibility(View.GONE);
			holder.mListView.setAdapter(getItem(position));
		}else{
			if(!error&&(selectPosition==position))new LoadContentTask().execute(position, view);
			holder.mProgressBar.setVisibility(View.VISIBLE);
		}

		return  view;
	}

	public void setSelectPosition(int selectPosition) {
		this.selectPosition = selectPosition;
	}


	public int getSelectPosition() {
		return selectPosition;
	}

	private class LoadContentTask extends AsyncTask<Object, Object, Object> {

		private Integer position;
		private View view;

		@Override
		protected Object doInBackground(Object... arg) {
			position = (Integer) arg[0];
			view = (View) arg[1];
			ArrayList<MessageItem> newMsg= new ArrayList<MessageItem>();
			try {
				String url=null;
				if(position==0)
					url="/bbsnewmail";
				else if(position==1)
					url="/bbsmail";
				String result =  Net.getInstance().getWithCookie(Property.Base_URL+url);
					Elements es= Jsoup.parse(result).select("tr");
					for(Element e:es){
						if(es.get(0).equals(e)) continue;
						Elements es_td=e.select("td");
						MessageItem item= new MessageItem();
						if(position==0){
							item.setTitle(es_td.get(4).child(0).text());
							item.setLink(es_td.get(4).select("a").first().attr("href"));
							item.setName(es_td.get(2).child(0).text());
						}else if(position==1){
							item.setTitle(es_td.get(5).child(0).text());
							item.setLink(es_td.get(5).select("a").first().attr("href"));
							item.setName(es_td.get(3).child(0).text());
						}

						String content = Net.getInstance().getWithCookie(Property.Base_URL+"/"+item.getLink());
						content= Jsoup.parse(content).select("pre").text();
						int start = content.indexOf("来  源:");
						content = content.substring(content.indexOf("\n", start+6));
						content = content.replace("【 在", "<br>【 在");
						content = content.replace("】:", "】:<br>");
						content = content.replace("--", "<br><br>--");
						content = content.replace("※ 来源", "<br>※ 来源");
						item.setContent(content);
						newMsg.add(item);
						if(position==0)Log.v("Message", position+"   "+item.toString());
					}
					mAdapter[position].setMsg(newMsg);
					mAdapter[position].notifyDataSetChanged();
					error=false;
				return newMsg;
			} catch (Exception e) {
				// TODO Auto-generated catch block
				error=true;
				Log.i("getMsg", e.toString());
			}
			return getTitle(position);
		}

		protected void onPostExecute(Object result) {
			// process result  
			selectPosition=-1;
			drawView(position,view);
			view.postInvalidate();
		}

	}	

}
